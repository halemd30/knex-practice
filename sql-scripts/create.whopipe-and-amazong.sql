CREATE TABLE IF NOT EXISTS whopipe_video_views (
  view_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  video_name TEXT NOT NULL,
  region TEXT NOT NULL,
  date_viewed TIMESTAMP DEFAULT now() NOT NULL
);

DROP TYPE IF EXISTS department;
CREATE TYPE department AS ENUM (
  'Electronics',
  'Cleaning',
  'Grocery',
  'Furniture',
  'Stationery',
  'Clothing',
  'DIY',
  'Sports',
  'Homeware',
  'Games',
  'Transport'
);

CREATE TABLE IF NOT EXISTS amazong_products (
  product_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name TEXT NOT NULL,
  price decimal(12,2) NOT NULL,
  image TEXT,
  category department NOT NULL
);

SELECT product_id, name, price, category
  FROM amazong_products
WHERE name LIKE '%cheese%';

-- pagination
-- first page:
SELECT product_id, name, price, category
  FROM amazong_products
LIMIT 10
  OFFSET 0;

-- get page 4, to find the offset - minus 1 from the page
-- number (3), multiply this number by the limit, 10, giving us 30
SELECT product_id, name, price, category
  FROM amazong_products
LIMIT 10
  OFFSET 30;

-- filter by image
SELECT product_id, name, price, category
  FROM amazong_products
  WHERE image IS NOT NULL;

-- find most popular whopipe videos
SELECT video_name, region, count(date_viewed) AS views
FROM whopipe_video_views
  WHERE date_viewed > (now() - '30 days'::INTERVAL)
GROUP BY video_name, region
ORDER BY region ASC, views DESC;


